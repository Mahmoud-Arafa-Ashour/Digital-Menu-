{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.module.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  UntypedFormGroup,\r\n  UntypedFormBuilder,\r\n  Validators,\r\n  FormGroup,\r\n} from \"@angular/forms\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AppSettings, Settings } from \"src/app/app.settings\";\r\nimport { AuthService } from \"src/app/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm!: UntypedFormGroup;\r\n  public hide = true;\r\n  public bgImage: any;\r\n  public settings: Settings;\r\n  constructor(\r\n    public fb: UntypedFormBuilder,\r\n    public Router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    public appSettings: AppSettings,\r\n    private _AuthService: AuthService\r\n  ) {}\r\n  error: String = \"\";\r\n\r\n  ngOnInit(): void {\r\n    this.bgImage = this.sanitizer.bypassSecurityTrustStyle(\r\n      \"url(assets/images/others/login.jpg)\"\r\n    );\r\n    this.loginForm = this.fb.group({\r\n      user_phonenumber: [\r\n        null,\r\n        Validators.compose([Validators.required, Validators.minLength(6)]),\r\n      ],\r\n      user_password: [\r\n        null,\r\n        Validators.compose([Validators.required, Validators.minLength(6)]),\r\n      ],\r\n      rememberMe: true,\r\n    });\r\n  }\r\n\r\n  onLoginFormSubmit(formInfo: FormGroup) {\r\n    this._AuthService.login(formInfo.value).subscribe(\r\n      (res: any) => {\r\n        localStorage.setItem(\"userToken\", JSON.stringify(res.user.userToken));\r\n        this._AuthService.setUserData();\r\n        this.Router.navigate([\"/admin/menu-items/list\"]);\r\n      },\r\n      (serverLoginError: any) => {\r\n        if (serverLoginError.status === 400) {\r\n          this.error = 'the email or password is incorrect'\r\n        }\r\n      }\r\n    );\r\n  }\r\n  ngAfterViewInit(){\r\n    document.getElementById('preloader')?.classList.add('hide');    \r\n  }\r\n}","<div class=\"px-3 py-5 login-com\">\r\n  <div class=\"theme-container\">\r\n    <mat-card class=\"p-0 o-hidden\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div\r\n          fxFlex=\"100\"\r\n          fxFlex.gt-sm=\"50\"\r\n          class=\"p-0\"\r\n          [style.background-image]=\"bgImage\"\r\n          class=\"bg-cover\"\r\n        ></div>\r\n        <div\r\n          fxFlex=\"100\"\r\n          fxFlex.gt-sm=\"50\"\r\n          class=\"py-3\"\r\n          ngClass.gt-sm=\"px-5\"\r\n          ngClass.sm=\"px-3\"\r\n          ngClass.xs=\"px-3\"\r\n        >\r\n          <div\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"center center\"\r\n            class=\"text-center\"\r\n          >\r\n            <h1 class=\"secondary-font\">Sign In</h1>\r\n          </div>\r\n          <form\r\n            [formGroup]=\"loginForm\"\r\n            (ngSubmit)=\"onLoginFormSubmit(loginForm)\"\r\n          >\r\n            <mat-form-field appearance=\"outline\" class=\"w-100 mt-2\">\r\n              <mat-icon matPrefix class=\"mr-1 text-muted\">person</mat-icon>\r\n              <mat-label>Username</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Username\"\r\n                formControlName=\"user_phonenumber\"\r\n                required\r\n              />\r\n              <mat-error\r\n                *ngIf=\"loginForm.controls.user_phonenumber.errors?.required\"\r\n                >Username is required</mat-error\r\n              >\r\n              <mat-error\r\n                *ngIf=\"\r\n                  loginForm.controls.user_phonenumber.hasError('minlength')\r\n                \"\r\n                >Username isn't long enough, minimum of 6 characters</mat-error\r\n              >\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" class=\"w-100 mt-1\">\r\n              <mat-icon matPrefix class=\"mr-1 text-muted\">lock</mat-icon>\r\n              <mat-label>Password</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Password\"\r\n                formControlName=\"user_password\"\r\n                required\r\n                [type]=\"hide ? 'password' : 'text'\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"loginForm.controls.user_password.errors?.required\"\r\n                >Password is required</mat-error\r\n              >\r\n              <mat-error\r\n                *ngIf=\"loginForm.controls.user_password.hasError('minlength')\"\r\n                >Password isn't long enough, minimum of 6 characters</mat-error\r\n              >\r\n\r\n              <button\r\n                mat-icon-button\r\n                matSuffix\r\n                (click)=\"hide = !hide\"\r\n                type=\"button\"\r\n                class=\"text-muted\"\r\n              >\r\n                <mat-icon>{{\r\n                  hide ? \"visibility_off\" : \"visibility\"\r\n                }}</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"error\">{{ error }}</mat-error>\r\n            <div class=\"text-center mt-2\">\r\n              <button\r\n                mat-raised-button\r\n                color=\"accent\"\r\n                class=\"uppercase\"\r\n                type=\"submit\"\r\n              >\r\n                Sign to My Account\r\n              </button>\r\n            </div>\r\n            <div\r\n              fxLayout=\"row\"\r\n              fxLayoutAlign=\"space-between center\"\r\n              class=\"mt-3\"\r\n            ></div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"names":["Validators","i0","LoginComponent","constructor","fb","Router","sanitizer","appSettings","_AuthService","ngOnInit","bgImage","bypassSecurityTrustStyle","loginForm","group","user_phonenumber","compose","required","minLength","user_password","rememberMe","onLoginFormSubmit","formInfo","login","value","subscribe","res","localStorage","setItem","JSON","stringify","user","userToken","setUserData","navigate","serverLoginError","status","error","ngAfterViewInit","document","getElementById","classList","add","selectors","decls","vars","consts","template","ctx","CommonModule","RouterModule","SharedModule","routes","path","component","pathMatch","LoginModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}