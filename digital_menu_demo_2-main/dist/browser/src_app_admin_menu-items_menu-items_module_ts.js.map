{"version":3,"file":"src_app_admin_menu-items_menu-items_module_ts.js","mappings":"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","sources":["./src/app/admin/menu-items/categories/categories.component.ts","./src/app/admin/menu-items/categories/categories.component.html","./src/app/admin/menu-items/categories/category-dialog/category-dialog.component.ts","./src/app/admin/menu-items/categories/category-dialog/category-dialog.component.html","./src/app/admin/menu-items/list/add-dialog/add-dialog.component.ts","./src/app/admin/menu-items/list/add-dialog/add-dialog.component.html","./src/app/admin/menu-items/list/list.component.ts","./src/app/admin/menu-items/list/list.component.html","./src/app/admin/menu-items/menu-items.module.ts","./src/app/admin/menu-items/offers/offers-dialog/offers-dialog.component.ts","./src/app/admin/menu-items/offers/offers-dialog/offers-dialog.component.html","./src/app/admin/menu-items/offers/offers.component.ts","./src/app/admin/menu-items/offers/offers.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { AppService } from \"src/app/app.service\";\r\nimport { CategoryDialogComponent } from \"./category-dialog/category-dialog.component\";\r\nimport { AuthService } from \"src/app/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-categories\",\r\n  templateUrl: \"./categories.component.html\",\r\n  styleUrls: [\"./categories.component.scss\"],\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n  displayedColumns: string[] = [\"id\", \"name\", \"edit\", \"remove\"];\r\n  dataSource!: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n  private _AuthService: AuthService;\r\n\r\n  constructor(public appService: AppService, public snackBar: MatSnackBar) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCategories();\r\n  }\r\n  getAllCategories() {\r\n    this.appService.getCategories().subscribe((categories: any) => {\r\n      this.initDataSource(categories.allCategories);\r\n    });\r\n  }\r\n  public initDataSource(data: any) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  public remove(category: any) {\r\n    const index: number = this.dataSource.data.indexOf(category);\r\n    if (index !== -1) {\r\n      const message = this.appService.getTranslateValue(\"MESSAGE.SURE_DELETE\");\r\n      let dialogRef = this.appService.openConfirmDialog(\"\", message!);\r\n      dialogRef.afterClosed().subscribe((dialogResult) => {\r\n        if (dialogResult) {\r\n          this.appService.removeCatogery(category.id).subscribe(\r\n            (res) => this.getAllCategories(),\r\n            (serverLoginError: any) => {\r\n              if (serverLoginError.status === 401) {\r\n                this._AuthService.logOut();\r\n              }\r\n            }\r\n          );\r\n          this.initDataSource(this.dataSource.data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public addCategory(category: any | null) {\r\n    const dialogRef = this.appService.openDialog(\r\n      CategoryDialogComponent,\r\n      category,\r\n      \"theme-dialog\"\r\n    );\r\n    dialogRef.afterClosed().subscribe((cat) => {\r\n      let message = \"\";\r\n      if (cat) {\r\n        let catObj = {\r\n          category_name: cat.category_name,\r\n        };\r\n        this.appService.addCatogery(catObj).subscribe(\r\n          () => {\r\n            this.getAllCategories();\r\n          },\r\n\r\n          (serverLoginError: any) => {\r\n            if (serverLoginError.status === 401) {\r\n              this._AuthService.logOut();\r\n            }\r\n          }\r\n        );\r\n        this.paginator.lastPage();\r\n        message = \"New category \" + cat.category_name + \" added successfully!\";\r\n        this.initDataSource(this.dataSource.data);\r\n        this.snackBar.open(message, \"×\", {\r\n          panelClass: \"success\",\r\n          verticalPosition: \"top\",\r\n          duration: 3000,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  public editCategory(category: any | null) {\r\n    console.log(category);\r\n    const dialogRef = this.appService.openDialog(\r\n      CategoryDialogComponent,\r\n      category,\r\n      \"theme-dialog\"\r\n    );\r\n    dialogRef.afterClosed().subscribe((cat) => {\r\n      let message = \"\";\r\n      if (cat) {\r\n        let catObj = {\r\n          category_name: cat.category_name,\r\n        };\r\n        this.appService.editCatogery(category.id, catObj).subscribe(\r\n          () => {\r\n            this.getAllCategories();\r\n          },\r\n          (serverLoginError: any) => {\r\n            if (serverLoginError.status === 401) {\r\n              this._AuthService.logOut();\r\n            }\r\n          }\r\n        );\r\n        this.paginator.lastPage();\r\n        message = \"Category \" + cat.category_name + \" edited successfully!\";\r\n        // }\r\n        this.initDataSource(this.dataSource.data);\r\n        this.snackBar.open(message, \"×\", {\r\n          panelClass: \"success\",\r\n          verticalPosition: \"top\",\r\n          duration: 3000,\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"m-2 p-0\">\r\n  <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\" class=\"w-100 p-2\">\r\n    <div></div>\r\n    <button mat-raised-button color=\"primary\" (click)=\"addCategory(null)\">\r\n      <mat-icon class=\"mat-icon-md\">add</mat-icon>\r\n      Add New Category\r\n    </button>\r\n    \r\n  </div>\r\n  <mat-divider></mat-divider>\r\n\r\n  <div class=\"table-wrapper\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-100\">\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\r\n        <td mat-cell *matCellDef=\"let indexOfelement=index\">\r\n          {{ indexOfelement + 1 }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n        <td mat-cell *matCellDef=\"let category\">\r\n          {{ category.category_name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n\r\n        <!-- Edit Column -->\r\n        <ng-container matColumnDef=\"edit\">\r\n          <th mat-header-cell *matHeaderCellDef>Edit</th>\r\n          <td mat-cell *matCellDef=\"let category\">\r\n            <button\r\n              mat-icon-button\r\n              color=\"primary\"\r\n              (click)=\"editCategory(category)\"\r\n              matTooltip=\"Edit\"\r\n            >\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Remove Column -->\r\n        <ng-container matColumnDef=\"remove\">\r\n          <th mat-header-cell *matHeaderCellDef>Remove</th>\r\n          <td mat-cell *matCellDef=\"let category\">\r\n            <button\r\n              mat-icon-button\r\n              color=\"warn\"\r\n              (click)=\"remove(category)\"\r\n              matTooltip=\"Remove\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let category; columns: displayedColumns\"></tr>\r\n    </table>\r\n    <p\r\n      *ngIf=\"dataSource && dataSource.data.length === 0\"\r\n      class=\"py-5 mb-0 text-center\"\r\n    >\r\n      No data available\r\n    </p>\r\n  </div>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 50]\"></mat-paginator>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { Category } from \"src/app/app.models\";\r\n\r\n@Component({\r\n  selector: \"app-category-dialog\",\r\n  templateUrl: \"./category-dialog.component.html\",\r\n  styleUrls: [\"./category-dialog.component.scss\"],\r\n})\r\nexport class CategoryDialogComponent implements OnInit {\r\n  public form!: UntypedFormGroup;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<CategoryDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public category: Category,\r\n    public fb: UntypedFormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      category_name: [null, Validators.required],\r\n    });\r\n\r\n    if (this.category) {\r\n      this.form.patchValue(this.category);\r\n    }\r\n  }\r\n\r\n  public onSubmit() {\r\n    if (this.form.valid) {\r\n      this.dialogRef.close(this.form.value);\r\n    }\r\n  }\r\n}\r\n","<div class=\"header bg-primary\">\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\r\n        <h2 class=\"fw-500 secondary-font\">{{(category) ? 'Edit' : 'Add'}} Category</h2>\r\n    </div>   \r\n</div>  \r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\" class=\"pt-3\">\r\n    <div mat-dialog-content>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput formControlName=\"category_name\" required>\r\n                    <mat-error *ngIf=\"form.controls.category_name.errors?.required\">Name is required</mat-error> \r\n                </mat-form-field>\r\n            </div> \r\n            <!-- <div fxFlex=\"100\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Description</mat-label> \r\n                    <textarea matInput placeholder=\"Enter description\" formControlName=\"description\" rows=\"6\"></textarea>  \r\n                </mat-form-field>\r\n            </div>    -->\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \r\n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n        </div> \r\n    </div>\r\n</form> \r\n ","import {\n  Component,\n  EventEmitter,\n  Inject,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n} from \"@angular/core\";\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { AppService } from \"src/app/app.service\";\nimport { MenuItem } from \"src/app/app.models\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { isPlatformBrowser } from \"@angular/common\";\n\n@Component({\n  selector: \"app-add-dialog\",\n  templateUrl: \"./add-dialog.component.html\",\n  styleUrls: [\"./add-dialog.component.scss\"],\n})\nexport class AddDialogComponent implements OnInit {\n  public form!: UntypedFormGroup;\n  private sub: any;\n  public id: any;\n  public showImage: boolean = false;\n  @Output() onFileChange: EventEmitter<any> = new EventEmitter();\n  @Output() onFileUploadClick: EventEmitter<any> = new EventEmitter();\n  // file: any;\n  // fileSize: any;\n  constructor(\n    public dialogRef: MatDialogRef<AddDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public menuItem: MenuItem,\n    public appService: AppService,\n    public formBuilder: UntypedFormBuilder,\n   \n    private activatedRoute: ActivatedRoute,\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) {\n    \n  }\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      product_name: [\n        null,\n        Validators.compose([Validators.required, Validators.minLength(3)]),\n      ],\n      product_description:'',\n      product_price: [null, Validators.required],\n      image: null,\n      categoryId: [null, Validators.required],\n    });\n    this.sub = this.activatedRoute.params.subscribe((params) => {\n      if (params[\"id\"]) {\n        this.id = params[\"id\"];\n        this.getMenuItemById();\n      } else {\n        this.showImage = true;\n      }\n    });\n    if (this.menuItem) {\n      this.form.patchValue({\n        product_name: this.menuItem.name,\n        product_description: this.menuItem.description,\n        product_price: this.menuItem.price,\n        image: this.menuItem.image,\n        categoryId: this.menuItem.categoryId,\n      });\n    }\n    this.getCategories();\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  public getMenuItemById() {\n    this.appService.getMenuItemById(this.id).subscribe((menuItem: MenuItem) => {\n      this.form.patchValue(menuItem);\n      if (isPlatformBrowser(this.platformId)) {\n        this.appService.convertImgToBase64(\n          menuItem.image.medium,\n          (dataUrl: string) => {\n            this.showImage = true;\n            this.form.controls.image.patchValue(dataUrl.toString());\n          }\n        );\n      }\n    });\n  }\n  public fileUploadClick() {\n    this.onFileUploadClick.emit();\n  }\n  public fileChange(files: any) {\n    console.log(files);\n    if (files.length) {\n      this.form.controls.image.patchValue(files[0].content);\n    } else {\n      this.form.controls.image.patchValue(null);\n    }\n  }\n  public getCategories() {\n    this.appService.getCategories().subscribe((categories) => {\n      this.appService.Data.categories = categories.allCategories;\n    });\n  }\n\n  public onSubmit() {\n    if (this.form.valid) {\n      this.dialogRef.close(this.form.value)\n      console.log(this.form.value)\n    }\n  }\n}\n","<div class=\"header bg-primary\">\n  <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\n    <h2 class=\"fw-500 secondary-font\">\n      {{ menuItem ? \"Edit\" : \"Add\" }} Menu Item\n    </h2>\n  </div>\n</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n  <div mat-dialog-content>\n    <div fxLayout=\"row wrap\">\n      <div fxFlex=\"100\" class=\"px-2 \" fxFlex.gt-sm=\"35\" *ngIf=\"showImage\">\n        <app-image-upload\n          [base64]=\"form.controls.image.value\"\n          [fileSize]=\"400\"\n          [acceptTypes]=\"'image/png, image/jpeg, image/jpg'\"\n          (onFileChange)=\"fileChange($event)\"\n        >\n        </app-image-upload>\n      </div>\n\n      <!-- <div fxFlex=\"100\" class=\"px-2 \" fxFlex.gt-sm=\"35\" >\n      <div fxLayout=\"row wrap\" [style.minHeight.px]=\"132\">\n        <img\n          [src]=\"imgUrl || 'assets/images/others/noimage.png'\"\n          class=\"d-block w-100 mat-elevation-z2 ArtistPic\"\n        />\n      </div>\n      <div class=\"file-upload mb-2\">\n        <input\n          *ngIf=\"!file\"\n          id=\"singleFileUploader\"\n          type=\"file\"\n          [accept]=\"acceptTypes\"\n          (change)=\"onSelectFile($event)\"\n        />\n        <button\n          *ngIf=\"!file\"\n          mat-raised-button\n          color=\"primary\"\n          class=\"uppercase w-100\"\n          type=\"button\"\n          (click)=\"fileUploadClick()\"\n        >\n          {{ \"BTN.UPLOAD\" | translate }}\n        </button>\n        <button\n          *ngIf=\"file\"\n          mat-raised-button\n          color=\"warn\"\n          class=\"uppercase w-100\"\n          type=\"button\"\n          (click)=\"deleteFile()\"\n        >\n          {{ \"BTN.REMOVE\" | translate }}\n        </button>\n      </div>\n    </div> -->\n      <div fxFlex=\"100\" class=\"px-2 mt-3\" fxFlex.gt-sm=\"65\">\n        <div fxLayout=\"row wrap\">\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" class=\"p-1\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n              <mat-label>Name</mat-label>\n              <input matInput formControlName=\"product_name\" required />\n              <mat-error *ngIf=\"form.controls.product_name.errors?.required\"\n                >Name is required</mat-error\n              >\n              <mat-error\n                *ngIf=\"form.controls.product_name.hasError('minlength')\"\n                >Name isn't long enough, minimum of 4 characters</mat-error\n              >\n            </mat-form-field>\n          </div>\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"35\" class=\"p-1\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n              <mat-label>Category</mat-label>\n              <mat-select formControlName=\"categoryId\" required>\n                <mat-option\n                  *ngFor=\"let cat of appService.Data.categories\"\n                  [value]=\"cat.id\"\n                >\n                  <span>{{ cat.category_name }}</span>\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls.categoryId.errors?.required\"\n                >Category is required</mat-error\n              >\n            </mat-form-field>\n          </div>\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n              <mat-label>Price</mat-label>\n              <input matInput type=\"number\" formControlName=\"product_price\" required />\n              <mat-error *ngIf=\"form.controls.product_price.errors?.required\"\n                >Price is required</mat-error\n              >\n            </mat-form-field>\n          </div>\n\n          <div fxFlex=\"100\" class=\"p-1\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n              <mat-label>Description</mat-label>\n              <textarea\n                matInput\n                formControlName=\"product_description\"\n                rows=\"3\"\n              ></textarea>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\n      <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>\n        Close\n      </button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MenuItem } from \"src/app/app.models\";\r\nimport { AppService } from \"src/app/app.service\";\r\nimport { UntypedFormGroup, UntypedFormBuilder } from \"@angular/forms\";\r\nimport { AddDialogComponent } from \"./add-dialog/add-dialog.component\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { AuthService } from \"src/app/auth.service\";\r\n@Component({\r\n  selector: \"app-list\",\r\n  templateUrl: \"./list.component.html\",\r\n  styleUrls: [\"./list.component.scss\"],\r\n})\r\nexport class ListComponent implements OnInit {\r\n  public form!: UntypedFormGroup;\r\n  // file: any;\r\n  displayedColumns: string[] = [\r\n    \"id\",\r\n    \"image\",\r\n    \"categoryId\",\r\n    \"name\",\r\n    \"price\",\r\n    \"actions\",\r\n  ];\r\n  dataSource!: MatTableDataSource<MenuItem>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n  constructor(\r\n    public appService: AppService,\r\n    public formBuilder: UntypedFormBuilder,\r\n    public snackBar: MatSnackBar,\r\n    private _AuthService: AuthService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.getMenuItems();\r\n  }\r\n  getAllCategories() {\r\n    this.appService.getCategories().subscribe(\r\n      (categories: any) => {\r\n        this.appService.Data.categories = categories.allCategories;\r\n      },\r\n      (err) => {\r\n        console.log(\"error\", err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public getMenuItems() {\r\n    this.appService.getMenuItems().subscribe((menuItems: any) => {\r\n      this.initDataSource(menuItems.allProducts);\r\n      this.appService.Data.categories = menuItems.allProducts;\r\n    });\r\n  }\r\n  public initDataSource(data: any) {\r\n    this.dataSource = new MatTableDataSource(data);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  public openAddItemDialog(menuItem: any | null) {\r\n    const dialogRef = this.appService.openDialog(\r\n      AddDialogComponent,\r\n      menuItem,\r\n      \"theme-dialog\"\r\n    );\r\n    dialogRef.afterClosed().subscribe((item) => {\r\n      console.log(\"Add\", item);\r\n\r\n      let message = \"\";\r\n      if (item) {\r\n        this.appService.addItem(item).subscribe(\r\n          (res) => {\r\n            message = \"New Item \" + item.product_name + \" added successfully!\";\r\n            this.snackBar.open(message, \"×\", {\r\n              panelClass: \"success\",\r\n              verticalPosition: \"top\",\r\n              duration: 3000,\r\n            });\r\n            console.log(\"Res\", res);\r\n            this.getMenuItems();\r\n          },\r\n          (serverLoginError:any) => {\r\n            console.log(serverLoginError);\r\n            // if (serverLoginError.status === 401) {\r\n            //   this._AuthService.logOut();\r\n            //   message = \"Session expired please login again\";\r\n            //   this.snackBar.open(message, \"×\", {\r\n            //     panelClass: \"red\",\r\n            //     verticalPosition: \"top\",\r\n            //     duration: 3000,\r\n            //   });\r\n            // }\r\n          }\r\n        );\r\n        this.paginator.lastPage();\r\n      }\r\n    });\r\n  }\r\n  public openEditItemDialog(menuItem: any | null) {\r\n    console.log(menuItem);\r\n\r\n    const dialogRef = this.appService.openDialog(\r\n      AddDialogComponent,\r\n      menuItem,\r\n      \"theme-dialog\"\r\n    );\r\n    dialogRef.afterClosed().subscribe((item) => {\r\n      let message = \"\";\r\n      if (item) {\r\n        console.log(\"Edit item with File\", item);\r\n        this.appService.editItem(menuItem.id, item).subscribe(\r\n          (res) => {\r\n            console.log(res);\r\n           \r\n            message = \"Edit Item \" + menuItem.name + \" Edited successfully!\";\r\n            this.snackBar.open(message, \"×\", {\r\n              panelClass: \"success\",\r\n              verticalPosition: \"top\",\r\n              duration: 3000,\r\n            });\r\n            this.getMenuItems();\r\n          },\r\n          (serverLoginError: any) => {\r\n            console.log(\"Session expired please login again (Edit)\");\r\n            if (serverLoginError.status === 401) {\r\n              this._AuthService.logOut();\r\n              message = \"Session expired please login again\";\r\n              this.snackBar.open(message, \"×\", {\r\n                panelClass: \"red\",\r\n                verticalPosition: \"top\",\r\n                duration: 3000,\r\n              });\r\n            }\r\n          }\r\n        );\r\n      }\r\n      this.paginator.lastPage();\r\n      this.initDataSource(this.dataSource.data);\r\n      // }\r\n    });\r\n  }\r\n  public remove(menuItem: any) {\r\n    const index: number = this.dataSource.data.indexOf(menuItem);\r\n    if (index !== -1) {\r\n      const message = this.appService.getTranslateValue(\"MESSAGE.SURE_DELETE\");\r\n      let dialogRef = this.appService.openConfirmDialog(\"\", message!);\r\n      dialogRef.afterClosed().subscribe((dialogResult) => {\r\n        let alarm = \"\";\r\n        if (dialogResult) {\r\n          this.appService.removeItem(menuItem.id).subscribe(\r\n            (res) => {\r\n              console.log(res);\r\n              this.getMenuItems();\r\n              alarm = menuItem.name + \" deleted successfully!\";\r\n              this.snackBar.open(alarm, \"×\", {\r\n                panelClass: \"success\",\r\n                verticalPosition: \"top\",\r\n                duration: 3000,\r\n              });\r\n            },\r\n            (serverLoginError: any) => {\r\n              console.log(\"Session expired please login again (Delete)\");\r\n              if (serverLoginError.status === 401) {\r\n                this._AuthService.logOut();\r\n                alarm = \"Session expired please login again\";\r\n                this.snackBar.open(alarm, \"×\", {\r\n                  panelClass: \"red\",\r\n                  verticalPosition: \"top\",\r\n                  duration: 3000,\r\n                });\r\n              }\r\n            }\r\n          );\r\n          this.initDataSource(this.dataSource.data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"m-2 p-0\">\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2\">\r\n        <div></div>\r\n        <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"openAddItemDialog(null)\"\r\n    >\r\n    <mat-icon class=\"mat-icon-md\">add</mat-icon>\r\n    Add New Item</button>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"table-wrapper\"> \r\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-100\">\r\n        \r\n         \r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n                <td mat-cell *matCellDef=\"let indexOfelement=index\" >{{indexOfelement+1}}</td>\r\n            </ng-container> \r\n            \r\n         \r\n            <ng-container matColumnDef=\"image\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Image </th>\r\n                <td mat-cell *matCellDef=\"let menuItem\">\r\n                <img [src]=\"menuItem.image\" class=\"ArtistPic\" alt=\"item\" > \r\n                </td>\r\n            </ng-container> \r\n\r\n            <ng-container matColumnDef=\"categoryId\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\r\n                <td mat-cell *matCellDef=\"let menuItem\">{{ menuItem.category_name }} </td>\r\n            </ng-container> \r\n\r\n        \r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n                <td mat-cell *matCellDef=\"let menuItem\"> {{menuItem.name}} </td>\r\n            </ng-container> \r\n\r\n        \r\n            <ng-container matColumnDef=\"price\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\r\n                <td mat-cell *matCellDef=\"let menuItem\"> <b class=\"primary-color\">{{menuItem.price}}</b> </td>\r\n            </ng-container> \r\n\r\n  \r\n            <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n                <td mat-cell *matCellDef=\"let menuItem\"> \r\n                    <a mat-icon-button color=\"primary\" (click)=\"openEditItemDialog(menuItem)\" matTooltip=\"Edit\">\r\n                        <mat-icon>edit</mat-icon>\r\n                    </a> \r\n\r\n                    <button mat-icon-button color=\"warn\" (click)=\"remove(menuItem)\" matTooltip=\"Remove\">\r\n                        <mat-icon>delete</mat-icon>\r\n                    </button>   \r\n                </td>\r\n            </ng-container>  \r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let menuItem; columns: displayedColumns;\"></tr>\r\n        </table> \r\n        \r\n        <p *ngIf=\"dataSource && dataSource.data.length === 0\" class=\"py-5 mb-0 text-center\">No data available</p> \r\n    </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 50]\"></mat-paginator>\r\n</mat-card>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { CategoriesComponent } from \"./categories/categories.component\";\r\nimport { ListComponent } from \"./list/list.component\";\r\nimport { CategoryDialogComponent } from \"./categories/category-dialog/category-dialog.component\";\r\nimport { AddDialogComponent } from './list/add-dialog/add-dialog.component';\r\nimport { OffersComponent } from './offers/offers.component';\r\nimport { OffersDialogComponent } from './offers/offers-dialog/offers-dialog.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: \"\", redirectTo: \"list\", pathMatch: \"full\" },\r\n  {\r\n    path: \"categories\",\r\n    component: CategoriesComponent,\r\n    data: { breadcrumb: \"Categories\" },\r\n  },\r\n  {\r\n    path: \"list\",\r\n    component: ListComponent,\r\n    data: { breadcrumb: \"Menu Items\" },\r\n  },\r\n\r\n  {\r\n    path: \"offers\",\r\n    component: OffersComponent,\r\n    data: { breadcrumb: \"Offers\" },\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CategoriesComponent,\r\n    ListComponent,\r\n    CategoryDialogComponent,\r\n    AddDialogComponent,\r\n    OffersComponent,\r\n    OffersDialogComponent,\r\n  ],\r\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\r\n})\r\nexport class MenuItemsModule {}\r\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Output,\n  PLATFORM_ID,\n} from \"@angular/core\";\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { AppService } from \"src/app/app.service\";\nimport { MenuItem } from \"src/app/app.models\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { isPlatformBrowser } from \"@angular/common\";\n@Component({\n  selector: \"app-offers-dialog\",\n  templateUrl: \"./offers-dialog.component.html\",\n  styleUrls: [\"./offers-dialog.component.scss\"],\n})\nexport class OffersDialogComponent {\n  public form!: UntypedFormGroup;\n  private sub: any;\n  public id: any;\n  public showImage: boolean = false;\n  @Output() onFileChange: EventEmitter<any> = new EventEmitter();\n  @Output() onFileUploadClick: EventEmitter<any> = new EventEmitter();\n  constructor(\n    public dialogRef: MatDialogRef<OffersDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public menuItem: MenuItem,\n    public appService: AppService,\n    public formBuilder: UntypedFormBuilder,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      offer_name:\"\",\n      offer_description: \"\",\n      price: 0,\n      image: [null ,Validators.required],\n    });\n    this.sub = this.activatedRoute.params.subscribe((params) => {\n      if (params[\"id\"]) {\n        this.id = params[\"id\"];\n        this.getMenuItemById();\n      } else {\n        this.showImage = true;\n      }\n    });\n    if (this.menuItem) {\n      this.form.patchValue({\n        offer_name: this.menuItem.name,\n        offer_description: this.menuItem.description,\n        price: this.menuItem.price,\n        image: this.menuItem.image,\n      });\n \n    }\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  public getMenuItemById() {\n    this.appService.getMenuItemById(this.id).subscribe((menuItem: MenuItem) => {\n      this.form.patchValue(menuItem);\n      if (isPlatformBrowser(this.platformId)) {\n        this.appService.convertImgToBase64(\n          menuItem.image.medium,\n          (dataUrl: string) => {\n            this.showImage = true;\n            this.form.controls.image.patchValue(dataUrl.toString());\n          }\n        );\n      }\n    });\n  }\n\n  public fileUploadClick() {\n    this.onFileUploadClick.emit();\n  }\n  public fileChange(files: any) {\n    console.log(files);\n    if (files.length) {\n      this.form.controls.image.patchValue(files[0].content);\n    } else {\n      this.form.controls.image.patchValue(null);\n    }\n  }\n\n  public onSubmit() {\n    if (this.form.valid) {\n      this.dialogRef.close(this.form.value)\n      console.log(this.form.value);\n    }\n  }\n}\n","\n<div class=\"dialog\">\n  <div class=\"header bg-primary\">\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\n      <h2 class=\"fw-500 secondary-font\">\n        {{ menuItem ? \"Edit\" : \"Add\" }} Offer\n      </h2>\n    </div>\n  </div>\n  <form\n    [formGroup]=\"form\"\n    (ngSubmit)=\"onSubmit()\"\n    autocomplete=\"off\"\n    \n  >\n    <div mat-dialog-content>\n      <div fxLayout=\"row wrap\">\n        <div fxFlex=\"100\" class=\"px-2 \" fxFlex.gt-sm=\"35\" *ngIf=\"showImage\">\n          <app-image-upload\n            [base64]=\"form.controls.image.value\"\n            [fileSize]=\"400\"\n            [acceptTypes]=\"'image/png, image/jpeg, image/jpg'\"\n            (onFileChange)=\"fileChange($event)\"\n          >\n          </app-image-upload>\n        </div>\n        <div fxFlex=\"100\" class=\"px-2 mt-3\" fxFlex.gt-sm=\"65\">\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"75\" >\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"offer_name\" />\n               \n              </mat-form-field>\n            </div>\n  \n            <div fxFlex=\"100\" fxFlex.gt-sm=\"25\">\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Price</mat-label>\n                <input matInput formControlName=\"price\" required />\n                <mat-error *ngIf=\"form.controls.price.errors?.required\"\n                  >Price is required</mat-error\n                >\n              </mat-form-field>\n            </div>\n  \n            <div fxFlex=\"100\" >\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Description</mat-label>\n                <textarea\n                  matInput\n                  formControlName=\"offer_description\"\n                  rows=\"3\"\n                ></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\n        <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>\n          Close\n        </button>\n        <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MenuItem } from \"src/app/app.models\";\nimport { AppService } from \"src/app/app.service\";\nimport { UntypedFormGroup, UntypedFormBuilder } from \"@angular/forms\";\nimport { OffersDialogComponent } from \"./offers-dialog/offers-dialog.component\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { AuthService } from \"src/app/auth.service\";\n\n@Component({\n  selector: \"app-offers\",\n  templateUrl: \"./offers.component.html\",\n  styleUrls: [\"./offers.component.scss\"],\n})\nexport class OffersComponent {\n  public form!: UntypedFormGroup;\n  // file: any;\n  displayedColumns: string[] = [\"id\", \"image\", \"name\", \"price\", \"actions\"];\n  dataSource!: MatTableDataSource<MenuItem>;\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n  constructor(\n    public appService: AppService,\n    public formBuilder: UntypedFormBuilder,\n    public snackBar: MatSnackBar,\n    private _AuthService: AuthService\n  ) {}\n  ngOnInit(): void {\n    this.getOffers();\n  }\n\n\n\n  public getOffers() {\n    this.appService.getOffers().subscribe((offers: any) => {\n      console.log(offers);\n      this.initDataSource(offers.allOffers);\n      \n      this.appService.Data.categories = offers.allOffers;\n    });\n  }\n  public initDataSource(data: any) {\n    this.dataSource = new MatTableDataSource(data);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  public openAddOfferDialog(offer: any | null) {\n    const dialogRef = this.appService.openDialog(\n      OffersDialogComponent,\n      offer,\n      \"theme-dialog\"\n    );\n    dialogRef.afterClosed().subscribe((offer) => {\n      console.log(\"Add\", offer);\n\n      let message = \"\";\n      if (offer) {\n        this.appService.addOffer(offer).subscribe(\n          (res) => {\n            console.log(\"Res\", res);\n            this.getOffers();\n            message = \"New Offer \" + \" added successfully!\";\n            this.snackBar.open(message, \"×\", {\n              panelClass: \"success\",\n              verticalPosition: \"top\",\n              duration: 3000,\n            });\n          },\n          (serverLoginError: any) => {\n            console.log(\"Session expired please login again (Add)\");\n            if (serverLoginError.status === 401) {\n              this._AuthService.logOut();\n              message = \"Session expired please login again\";\n              this.snackBar.open(message, \"×\", {\n                panelClass: \"red\",\n                verticalPosition: \"top\",\n                duration: 3000,\n              });\n            }\n          }\n        );\n        this.paginator.lastPage();\n      }\n    });\n  }\n  public openEditOfferDialog(offer: any | null) {\n    console.log(offer);\n\n    const dialogRef = this.appService.openDialog(\n      OffersDialogComponent,\n      offer,\n      \"theme-dialog\"\n    );\n    dialogRef.afterClosed().subscribe((item) => {\n      let message = \"\";\n      if (item) {\n        console.log(\"Edit Offer\", item);\n        this.appService.editOffer(offer.id, item).subscribe(\n          (res) => {\n            console.log(res);\n            this.getOffers();\n            message = \"Edit Item \" + offer.name + \" Edited successfully!\";\n            this.snackBar.open(message, \"×\", {\n              panelClass: \"success\",\n              verticalPosition: \"top\",\n              duration: 3000,\n            });\n          },\n          (serverLoginError: any) => {\n            console.log(\"Session expired please login again (Edit)\");\n            if (serverLoginError.status === 401) {\n              this._AuthService.logOut();\n              message = \"Session expired please login again\";\n              this.snackBar.open(message, \"×\", {\n                panelClass: \"red\",\n                verticalPosition: \"top\",\n                duration: 3000,\n              });\n            }\n          }\n        );\n        this.paginator.lastPage();\n        this.initDataSource(this.dataSource.data);\n      }\n    });\n  }\n  public remove(offer: any) {\n    const index: number = this.dataSource.data.indexOf(offer);\n    if (index !== -1) {\n      const message = this.appService.getTranslateValue(\"MESSAGE.SURE_DELETE\");\n      let dialogRef = this.appService.openConfirmDialog(\"\", message!);\n      dialogRef.afterClosed().subscribe((dialogResult) => {\n        let alarm = \"\";\n        if (dialogResult) {\n          this.appService.removeOffer(offer.id).subscribe(\n            (res) => {\n              console.log(res);\n              this.getOffers();\n              alarm = offer.name + \" deleted successfully!\";\n              this.snackBar.open(alarm, \"×\", {\n                panelClass: \"success\",\n                verticalPosition: \"top\",\n                duration: 3000,\n              });\n            },\n            (serverLoginError: any) => {\n              console.log(\"Session expired please login again (Delete)\");\n              if (serverLoginError.status === 401) {\n                this._AuthService.logOut();\n                alarm = \"Session expired please login again\";\n                this.snackBar.open(alarm, \"×\", {\n                  panelClass: \"red\",\n                  verticalPosition: \"top\",\n                  duration: 3000,\n                });\n              }\n            }\n          );\n          this.initDataSource(this.dataSource.data);\n        }\n      });\n    }\n  }\n}\n","<mat-card class=\"m-2 p-0\">\n  <div\n    fxLayout=\"row wrap\"\n    fxLayoutAlign=\"space-between center\"\n    class=\"w-100 p-2\"\n  >\n    <div></div>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"openAddOfferDialog(null)\"\n    >\n      <mat-icon class=\"mat-icon-md\">add</mat-icon>\n      Add New Offer\n    </button>\n  </div>\n  <mat-divider></mat-divider>\n\n  <div class=\"table-wrapper\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"w-100\">\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n        <td mat-cell *matCellDef=\"let indexOfelement = index\">\n          {{ indexOfelement + 1 }}\n        </td>\n      </ng-container>\n\n      <!-- Image Column -->\n      <ng-container matColumnDef=\"image\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Image</th>\n        <td mat-cell *matCellDef=\"let offer\">\n          <img [src]=\"offer.image\" class=\"ArtistPic\" alt=\"item\" />\n        </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n        <td mat-cell *matCellDef=\"let offer\">{{ offer.name }}</td>\n      </ng-container>\n\n      <!-- Price Column -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\n        <td mat-cell *matCellDef=\"let offer\">\n          <b class=\"primary-color\">{{ offer.price }}</b>\n        </td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef>Actions</th>\n        <td mat-cell *matCellDef=\"let offer\">\n          <a\n            mat-icon-button\n            color=\"primary\"\n            (click)=\"openEditOfferDialog(offer)\"\n            matTooltip=\"Edit\"\n          >\n            <mat-icon>edit</mat-icon>\n          </a>\n\n          <button\n            mat-icon-button\n            color=\"warn\"\n            (click)=\"remove(offer)\"\n            matTooltip=\"Remove\"\n          >\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let menuItem; columns: displayedColumns\"></tr>\n    </table>\n    <p\n      *ngIf=\"dataSource && dataSource.data.length === 0\"\n      class=\"py-5 mb-0 text-center\"\n    >\n      No data available\n    </p>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 50]\"></mat-paginator>\n</mat-card>\n"],"names":["MatPaginator","MatSort","MatTableDataSource","CategoryDialogComponent","i0","CategoriesComponent","constructor","appService","snackBar","ngOnInit","getAllCategories","getCategories","subscribe","categories","initDataSource","allCategories","data","dataSource","paginator","sort","remove","category","index","indexOf","message","getTranslateValue","dialogRef","openConfirmDialog","afterClosed","dialogResult","removeCatogery","id","res","serverLoginError","status","_AuthService","logOut","addCategory","openDialog","cat","catObj","category_name","addCatogery","lastPage","open","panelClass","verticalPosition","duration","editCategory","console","log","editCatogery","selectors","viewQuery","ctx","Validators","MAT_DIALOG_DATA","fb","form","group","required","patchValue","onSubmit","valid","close","value","decls","vars","consts","template","EventEmitter","PLATFORM_ID","isPlatformBrowser","AddDialogComponent","menuItem","formBuilder","activatedRoute","platformId","product_name","compose","minLength","product_description","product_price","image","categoryId","sub","params","getMenuItemById","showImage","name","description","price","ngOnDestroy","unsubscribe","convertImgToBase64","medium","dataUrl","controls","toString","fileUploadClick","onFileUploadClick","emit","fileChange","files","length","content","Data","outputs","onFileChange","ListComponent","getMenuItems","err","menuItems","allProducts","openAddItemDialog","item","addItem","openEditItemDialog","editItem","alarm","removeItem","CommonModule","RouterModule","SharedModule","OffersComponent","OffersDialogComponent","routes","path","redirectTo","pathMatch","component","breadcrumb","MenuItemsModule","forChild","declarations","imports","offer_name","offer_description","getOffers","offers","allOffers","openAddOfferDialog","offer","addOffer","openEditOfferDialog","editOffer","removeOffer"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}